{"version":3,"sources":["actions/ResultChecker.js","components/Board/Cross/Cross.js","components/Board/Zeroes/Zeroes.js","components/Board/Squares/Squares.js","actions/BoardActions.js","actions/ActionTypes.js","actions/PlayerActions.js","actions/ResultsAction.js","components/Board/Board.js","components/Board/Players.js","components/Board/Result/Result.js","components/home_screen/InputForm.js","App.js","reducers/BoardReducers.js","reducers/PlayerReducers.js","reducers/ResultReducer.js","reducers/index.js","store.js","index.js"],"names":["ResultChecker","board","symbol","count","forEach","cells","console","log","Cross","className","Zeroes","connect","state","players","dispatch","draw","cellIndex","turn","type","drawXAction","drawOAction","resultDispatch","checkResult","index","disabled","useEffect","id","onClick","map","value","key","formValue","getFormValues","reset","ref","useRef","ref2","player1","player2","undefined","current","classList","to","result","win","tie","InputForm","renderInput","input","label","meta","error","touched","autoComplete","renderError","onSubmit","formValues","this","props","handleSubmit","Field","name","component","React","Component","reduxForm","form","validate","errors","destroyOnUnmount","PageOne","PageTwo","App","path","exact","initialState","p1","p2","combineReducers","action","newXState","newOState","player","newState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.5d74cb82.chunk.js","sourcesContent":["\r\n\r\nexport function ResultChecker(board, symbol){\r\n    if (board[0] === symbol && board[1] === symbol && board[2] === symbol){\r\n        return true\r\n    }\r\n\r\n    if (board[3] === symbol && board[4] === symbol && board[5] === symbol){\r\n        return true\r\n    }\r\n\r\n    if (board[6] === symbol && board[7] === symbol && board[8] === symbol){\r\n        return true\r\n    }\r\n\r\n    if (board[0] === symbol && board[3] === symbol && board[6] === symbol){\r\n        return true\r\n    }\r\n\r\n    if (board[2] === symbol && board[5] === symbol && board[8] === symbol){\r\n        return true\r\n    }\r\n\r\n    if (board[1] === symbol && board[4] === symbol && board[7] === symbol){\r\n        return true\r\n    }\r\n\r\n    if (board[0] === symbol && board[4] === symbol && board[8] === symbol){\r\n        return true\r\n    }\r\n\r\n    if (board[6] === symbol && board[4] === symbol && board[2] === symbol){\r\n        return true\r\n    }\r\n\r\n    else{\r\n    var count = 0;\r\n    board.forEach(myFunction)\r\n   \r\n   \r\n    function myFunction(cells){\r\n        if (cells !== null) {\r\n            count++\r\n        }\r\n        return count;\r\n        }  \r\n\r\n    console.log(count) \r\n\r\n    if(count === 8 ){\r\n        return false\r\n    }\r\n    } \r\n}\r\n\r\n\r\n    ","import React from 'react';\r\nimport './Cross.css';\r\n\r\nconst Cross = () =>{\r\n    return(\r\n        <div className='cross'>\r\n          X\r\n        </div>\r\n     \r\n    )\r\n}\r\n\r\nexport default Cross;","import React from 'react';\r\nimport './Zeroes.css'\r\n\r\nconst Zeroes = () =>{\r\n    return(\r\n        <div className='zero'>\r\n          O\r\n        </div>\r\n     \r\n    )\r\n}\r\n\r\nexport default Zeroes;","import React, { useEffect } from 'react';\r\nimport {connect,} from 'react-redux';\r\nimport './Squares.css';\r\n\r\nimport { drawXAction, drawOAction, } from '../../../actions/BoardActions';\r\nimport { toogleTurnAction,} from '../../../actions/PlayerActions'\r\nimport {checkResult} from '../../../actions/ResultsAction'\r\nimport Cross from '../Cross/Cross';\r\nimport Zeroes from '../Zeroes/Zeroes';\r\n\r\nconst Squares = ({symbol, index, draw, players, board, resultDispatch}) =>{\r\n\r\n    const disabled = symbol ? 'disabled' : '';\r\n\r\n\r\n    useEffect(()=>{\r\n       resultDispatch(board)\r\n    })\r\n\r\n    return(\r\n\r\n        <div id=\"squares\" className=\"col-md-4\" onClick={() => draw(players,index, board)}>\r\n            <div className={\"\" +disabled}>\r\n            {symbol ? (symbol === 'X' ? <Cross/> : <Zeroes/>) : ''}\r\n            </div>\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    draw: (players, cellIndex, board)=>{\r\n        if (!board[cellIndex]) {\r\n            if (players[players.turn] === 'X'){\r\n                dispatch(drawXAction(cellIndex))\r\n                \r\n            }else{\r\n                dispatch(drawOAction(cellIndex))\r\n            }  \r\n        }  dispatch(toogleTurnAction()) \r\n    },\r\n    resultDispatch:(board)=>{\r\n        dispatch(checkResult(board))\r\n    }    \r\n})\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        players: state.players,\r\n        board: state.board\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Squares);","import {DRAW_X, DRAW_O, RESET} from './ActionTypes'\r\n\r\n\r\nexport const drawXAction = (cellIndex) =>{\r\n    return{\r\n        type: DRAW_X,\r\n        cellIndex\r\n    }\r\n}\r\n\r\nexport const drawOAction = (cellIndex)=>{\r\n    return{\r\n        type: DRAW_O,\r\n        cellIndex\r\n    }\r\n}\r\n\r\nexport const reset = ()=>{\r\n    return{\r\n        type: RESET,\r\n    }\r\n}","export const DRAW_X = 'DRAW_X'\r\nexport const DRAW_O = 'DRAW_O'\r\nexport const RESET = 'RESET'\r\n\r\nexport const PLAYER_X = 'PLAYER_X'\r\nexport const PLAYER_O = 'PLAYER_O'\r\nexport const TURN = 'TURN'\r\n\r\nexport const X_WINS = 'X_WINS'\r\nexport const O_WINS = 'O_WINS'\r\nexport const TIE = 'TIE'\r\nexport const KEEP_PLAYING = 'KEEP_PLAYING'","import {PLAYER_X, PLAYER_O, TURN} from './ActionTypes'\r\n\r\nexport function selectXPLayerAction(player){\r\n    return{\r\n        type: PLAYER_X,\r\n        player\r\n    }\r\n}\r\n\r\nexport function selectOPLayerAction(player){\r\n    return{\r\n        type: PLAYER_O,\r\n        player\r\n    }\r\n}\r\n\r\nexport function toogleTurnAction(){\r\n    return {\r\n        type: TURN\r\n    }\r\n}","import {X_WINS, O_WINS, TIE, KEEP_PLAYING} from './ActionTypes'\r\nimport {ResultChecker} from './ResultChecker'\r\n\r\nexport function checkResult(board){\r\n    if(ResultChecker(board, 'X')){\r\n        return{\r\n           type: X_WINS \r\n        }\r\n    } else if(ResultChecker(board, 'O')){\r\n        return{\r\n           type: O_WINS \r\n        }\r\n    } else if(ResultChecker(board) === false){\r\n        return{\r\n            type: TIE\r\n        }\r\n    }else return{\r\n        type: KEEP_PLAYING\r\n    }\r\n}","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Squares from './Squares/Squares'\r\nimport '../Board/Board.css'\r\n\r\n\r\n\r\nconst Board = ({board}) =>{\r\n\r\n    return(\r\n    <Fragment>\r\n        <div className=\"row\">\r\n          { board.map((value, index)=> <Squares key={index} index={index} symbol={value}/> ) }\r\n        </div>\r\n    </Fragment>    \r\n    )\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        board: state.board,\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, ) (Board);","import React, { Fragment, useRef, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getFormValues,  } from 'redux-form'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Players.css'\r\nimport { reset } from '../../actions/BoardActions';\r\n\r\nconst Players = ({ players, formValue,reset}) =>{\r\n    \r\n    const ref = useRef();\r\n    const ref2 = useRef();\r\n    var player1 = \"\";\r\n    var player2 = \"\";\r\n   \r\n    if (formValue !== undefined) {\r\n     player1 = formValue.player1\r\n     player2 = formValue.player2\r\n    }\r\n    \r\n    //to select the active player\r\n    useEffect(()=>{\r\n        if (players.turn === 'p1') {\r\n             ref.current.classList = \"Player1 active\";\r\n             ref2.current.classList=\"Player2\";\r\n             \r\n        } else if(players.turn === 'p2') {\r\n            ref2.current.classList = \"Player2 active\";\r\n            ref.current.classList=\"Player1\";\r\n        }else{\r\n            \r\n        }\r\n    },[players.turn])\r\n\r\n\r\n    return(\r\n        \r\n    <Fragment>\r\n        <div className=\"row mt-3\">\r\n            <div className=\"col-md-4 text-center\">\r\n            <h4 ref={ref} className=\"Player1 active\" >{player1} </h4>\r\n            </div>\r\n            <div className=\"col-md-4 text-center\" onClick={()=> reset()}>\r\n            <h4 className=\"start \" > <Link to=\"./\" >  RESTART  </Link> </h4>\r\n            </div>\r\n            <div className=\"col-md-4 text-center\">\r\n            <h4 ref={ref2} className=\"Player2\">{player2} </h4>\r\n            </div>\r\n        </div>\r\n    </Fragment>    \r\n    )\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        players: state.players,\r\n        formValue: getFormValues('InputForm')(state),\r\n        board : state.board,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    reset: ()=>{\r\n      dispatch(reset())\r\n    },    \r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps) (Players);\r\n","import React  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getFormValues,  } from 'redux-form'\r\n\r\n\r\n\r\nconst Result = ({ result, formValue}) =>{\r\n\r\n    var player1 = \"\";\r\n    var player2 = \"\";\r\n\r\n    if (formValue !== undefined) {\r\n    player1 = formValue.player1\r\n    player2 = formValue.player2\r\n    }\r\n\r\n\r\n    if(result.win === 'X'){\r\n        return (<div className=\"alert alert-success mt-2\">{player1} Wins</div>)\r\n    }else if(result.win === 'O'){\r\n        return (<div className=\"alert alert-success mt-2\">{player2} Wins</div>)\r\n    }else if(result.tie === true && result.win === null) {\r\n        return  <div className=\"alert alert-info mt-2\">Its a DRAW</div> \r\n    }else return (<div className=\"alert alert-info mt-2\">Enjoy Playing</div> )\r\n\r\n    // return(\r\n    //     <div>\r\n            \r\n            \r\n    //     </div>\r\n    // )\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        players: state.players,\r\n        result : state.result,\r\n        formValue: getFormValues('InputForm')(state),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, ) (Result);","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass InputForm extends React.Component{\r\n    renderError({error, touched}){\r\n        if(touched && error){\r\n            return(\r\n                <div className=\"ui error message\">\r\n                <div className=\"header\">{error}</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n        \r\n    renderInput = ({input, label, meta}) => {\r\n    const className = `field ${meta.error && meta.touched ? 'error' : ''}`\r\n    return(\r\n    <div className={className}>\r\n        <label>{label}</label>\r\n        <input {...input} autoComplete=\"off\"/>\r\n        {this.renderError(meta)}\r\n    </div>\r\n    \r\n);\r\n};\r\n\r\n    \r\n    //what form should do on form submit\r\n    onSubmit=(formValues)=>{\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            \r\n            <form\r\n            onSubmit={this.props.handleSubmit(this.onSubmit)} \r\n            className=\"form container mt-5\" \r\n            >\r\n                <h1>WELCOME TO TICTACTOE</h1>\r\n                <Field name=\"player1\" component={this.renderInput} label=\"enter player1 name: \"/>\r\n                <Field name=\"player2\" component = {this.renderInput} label=\"enter player2 name: \"/>\r\n                <Link to= \"./game\"> <button className=\"btn-success\">PLAY</button> </Link>\r\n      \r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst validate = formValues => {\r\n    const errors = {};\r\n\r\n    if(!formValues.player1){\r\n        errors.player1 = \"You must enter name for player1\";\r\n    }\r\n\r\n    if(!formValues.player2){\r\n        errors.player2 = \"You must enter name for player2\";\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n\r\n\r\n\r\nexport default reduxForm({\r\n    form:'InputForm',\r\n    validate: validate,\r\n    destroyOnUnmount: false,\r\n   \r\n})(InputForm);","import React from 'react';\r\nimport \"./App.css\";\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\n\r\nimport Board from './components/Board/Board';\r\nimport Players from './components/Board/Players';\r\nimport Result from './components/Board/Result/Result'\r\nimport InputForm from './components/home_screen/InputForm'\r\n\r\n\r\nconst PageOne = () =>{\r\n    return(\r\n        <div className=\"container\">\r\n            <InputForm/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst PageTwo = () =>{\r\n    return(\r\n    <div>\r\n        <Players/>\r\n            <div id=\"board\" className=\"row\">\r\n                <div className=\"col-md-4 col-lg-4 offset-md-4 offset-lg-4 \">\r\n                <Board />\r\n                <Result/>\r\n                </div>\r\n            </div>\r\n    </div> \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n    return(\r\n        <div className=\"container\">\r\n        <BrowserRouter>\r\n           <Route path=\"/\" exact component ={PageOne}/>\r\n           <Route path=\"/Game\" component ={PageTwo} /> \r\n        </BrowserRouter>   \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","const initialState =[\r\n    null, null, null,\r\n    null, null, null,\r\n    null, null, null,\r\n]\r\n\r\nexport const boardReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case 'DRAW_X':\r\n            const newXState = [...state]\r\n            newXState[action.cellIndex] ='X'\r\n            return newXState\r\n\r\n        case 'DRAW_O':\r\n            const newOState = [...state]\r\n            newOState[action.cellIndex] = 'O'\r\n            return newOState\r\n           \r\n        case 'RESET':\r\n            return initialState\r\n\r\n        default:\r\n            return state    \r\n    }\r\n}","import { PLAYER_X, PLAYER_O, TURN} from '../actions/ActionTypes'\r\n\r\nconst initialState = {\r\n    p1: 'X',\r\n    p2: 'Y',\r\n    turn: 'p1'\r\n}\r\n\r\nexport function playerReducer(state=initialState, action){\r\n    switch(action.type){\r\n       \r\n        case PLAYER_X:\r\n            const newXState = { ...state }\r\n            if(action.player === 'p1'){\r\n                newXState.p1 = 'X'\r\n                newXState.p2 = 'O'\r\n            } else{\r\n                newXState.p1 = 'O'\r\n                newXState.p2 = 'X'\r\n            }\r\n            return newXState\r\n        \r\n        case PLAYER_O:\r\n            const newOState = { ...state }\r\n            if(action.player === 'p1'){\r\n                newOState.p1 = 'O'\r\n                newOState.p2 = 'X'\r\n            } else{\r\n                newOState.p1 = 'X'\r\n                newOState.p2 = 'O'\r\n            }\r\n            return newOState    \r\n    \r\n        case TURN:\r\n            const newState = {...state}\r\n\r\n            if(newState.turn === 'p1'){\r\n                newState.turn = 'p2'\r\n            }else{\r\n                newState.turn = 'p1'\r\n            }\r\n            return newState\r\n        default:\r\n            return state\r\n        }\r\n}","import {X_WINS, O_WINS, TIE, KEEP_PLAYING} from '../actions/ActionTypes'\r\n\r\n\r\nconst initialState = {\r\n    result: null,\r\n    tie: false\r\n}\r\n\r\nexport function resultReducer(state=initialState, action){\r\n\r\nswitch(action.type){\r\n    case X_WINS:\r\n        return{\r\n            win:'X',\r\n            tie:false\r\n        }\r\n    case O_WINS:\r\n        return{\r\n            win:'O',\r\n            tie:false\r\n        }\r\n    case TIE:\r\n        return{\r\n            win:null,\r\n            tie: true\r\n        }\r\n    case KEEP_PLAYING:\r\n            return{\r\n                win:null,\r\n                tie: false\r\n            }\r\n    default:\r\n        return state\r\n}\r\n}\r\n\r\n","import {combineReducers} from 'redux'\r\nimport { reducer as form  } from 'redux-form';\r\n\r\nimport {boardReducer} from './BoardReducers'\r\nimport {playerReducer} from './PlayerReducers'\r\nimport { resultReducer } from './ResultReducer';\r\n\r\n\r\nexport default  combineReducers({\r\n    board: boardReducer,\r\n    players: playerReducer,\r\n    result: resultReducer,\r\n    form: form\r\n    })\r\n","import {createStore, applyMiddleware, compose} from 'redux'\r\n\r\nimport rootReducer from './reducers'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer,\r\n    composeEnhancers(applyMiddleware()))\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css'\r\nimport App from './App';\r\nimport store from './store'\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n    <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}